   0  $accept : prog $end

   1  prog : declara func

   2  declara : tipo list_var PYC declara
   3          | tipo_reg list_var PYC declara
   4          |

   5  tipo_reg : ESTRUCT INICIO declara FIN

   6  tipo : base tipo_arr

   7  base : INT
   8       | FLOAT
   9       | DOUBLE
  10       | CAR
  11       | SIN

  12  tipo_arr : CORI NUM CORD tipo_arr
  13           |

  14  list_var : list_var COMA ID
  15           | ID

  16  func : DEF tipo ID PARI argum PARD INICIO declara sentencs FIN func
  17       |

  18  argum : list_arg
  19        | SIN

  20  list_arg : list_arg COMA arg
  21           | arg

  22  arg : tipo_arg ID

  23  tipo_arg : base param_arr

  24  param_arr : CORI CORD param_arr
  25            |

  26  sentencs : sentencs sentenc
  27           | sentenc

  28  sentenc : SI e_bool ENTC sentenc FIN
  29          | SI e_bool ENTC sentenc SINO sentenc FIN
  30          | MIENT e_bool HACER sentenc FIN
  31          | HACER sentenc MIENT e_bool PYC
  32          | SEGUN PARI var PARD HACER casos predet FIN
  33          | var DPI expr PYC
  34          | ESCRIBE expr PYC
  35          | LEER var PYC
  36          | DEVOL PYC
  37          | DEVOL expr PYC
  38          | TERMI PYC
  39          | INICIO sentenc FIN

  40  casos : CASO NUM DP sentenc casos
  41        | CASO NUM DP sentenc

  42  predet : PRED DP sentenc
  43         |

  44  e_bool : e_bool OR e_bool
  45         | e_bool AND e_bool
  46         | NOT e_bool
  47         | relac
  48         | VERDAD
  49         | FALSO

  50  relac : relac MAY relac
  51        | relac MEN relac
  52        | relac MAYI relac
  53        | relac MENI relac
  54        | relac DIF relac
  55        | relac IGUAL relac
  56        | expr

  57  expr : PARI expr PARD
  58       | expr MUL expr
  59       | expr DIV expr
  60       | expr PRC expr
  61       | expr MAS expr
  62       | expr MNS expr
  63       | var
  64       | NUM
  65       | CAD
  66       | CARACT

  67  var : ID var_comp

  68  var_comp : dato_est_sim
  69           | arreglo
  70           | PARI param PARD

  71  dato_est_sim : dato_est_sim PT ID
  72               |

  73  arreglo : arreglo CORI expr CORD
  74          | CORI expr CORD

  75  param : list_param
  76        |

  77  list_param : list_param COMA expr
  78             | expr

state 0
	$accept : . prog $end  (0)
	declara : .  (4)

	ESTRUCT  shift 1
	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	$end  reduce 4
	DEF  reduce 4

	prog  goto 7
	declara  goto 8
	tipo  goto 9
	tipo_reg  goto 10
	base  goto 11


state 1
	tipo_reg : ESTRUCT . INICIO declara FIN  (5)

	INICIO  shift 12
	.  error


state 2
	base : INT .  (7)

	.  reduce 7


state 3
	base : FLOAT .  (8)

	.  reduce 8


state 4
	base : DOUBLE .  (9)

	.  reduce 9


state 5
	base : CAR .  (10)

	.  reduce 10


state 6
	base : SIN .  (11)

	.  reduce 11


state 7
	$accept : prog . $end  (0)

	$end  accept


state 8
	prog : declara . func  (1)
	func : .  (17)

	DEF  shift 13
	$end  reduce 17

	func  goto 14


state 9
	declara : tipo . list_var PYC declara  (2)

	ID  shift 15
	.  error

	list_var  goto 16


state 10
	declara : tipo_reg . list_var PYC declara  (3)

	ID  shift 15
	.  error

	list_var  goto 17


state 11
	tipo : base . tipo_arr  (6)
	tipo_arr : .  (13)

	CORI  shift 18
	ID  reduce 13

	tipo_arr  goto 19


state 12
	tipo_reg : ESTRUCT INICIO . declara FIN  (5)
	declara : .  (4)

	ESTRUCT  shift 1
	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	FIN  reduce 4

	declara  goto 20
	tipo  goto 9
	tipo_reg  goto 10
	base  goto 11


state 13
	func : DEF . tipo ID PARI argum PARD INICIO declara sentencs FIN func  (16)

	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	.  error

	tipo  goto 21
	base  goto 11


state 14
	prog : declara func .  (1)

	.  reduce 1


state 15
	list_var : ID .  (15)

	.  reduce 15


state 16
	declara : tipo list_var . PYC declara  (2)
	list_var : list_var . COMA ID  (14)

	PYC  shift 22
	COMA  shift 23
	.  error


state 17
	declara : tipo_reg list_var . PYC declara  (3)
	list_var : list_var . COMA ID  (14)

	PYC  shift 24
	COMA  shift 23
	.  error


state 18
	tipo_arr : CORI . NUM CORD tipo_arr  (12)

	NUM  shift 25
	.  error


state 19
	tipo : base tipo_arr .  (6)

	.  reduce 6


state 20
	tipo_reg : ESTRUCT INICIO declara . FIN  (5)

	FIN  shift 26
	.  error


state 21
	func : DEF tipo . ID PARI argum PARD INICIO declara sentencs FIN func  (16)

	ID  shift 27
	.  error


state 22
	declara : tipo list_var PYC . declara  (2)
	declara : .  (4)

	ESTRUCT  shift 1
	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	$end  reduce 4
	INICIO  reduce 4
	FIN  reduce 4
	DEF  reduce 4
	SI  reduce 4
	MIENT  reduce 4
	HACER  reduce 4
	SEGUN  reduce 4
	ESCRIBE  reduce 4
	LEER  reduce 4
	DEVOL  reduce 4
	TERMI  reduce 4
	ID  reduce 4

	declara  goto 28
	tipo  goto 9
	tipo_reg  goto 10
	base  goto 11


state 23
	list_var : list_var COMA . ID  (14)

	ID  shift 29
	.  error


state 24
	declara : tipo_reg list_var PYC . declara  (3)
	declara : .  (4)

	ESTRUCT  shift 1
	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	$end  reduce 4
	INICIO  reduce 4
	FIN  reduce 4
	DEF  reduce 4
	SI  reduce 4
	MIENT  reduce 4
	HACER  reduce 4
	SEGUN  reduce 4
	ESCRIBE  reduce 4
	LEER  reduce 4
	DEVOL  reduce 4
	TERMI  reduce 4
	ID  reduce 4

	declara  goto 30
	tipo  goto 9
	tipo_reg  goto 10
	base  goto 11


state 25
	tipo_arr : CORI NUM . CORD tipo_arr  (12)

	CORD  shift 31
	.  error


state 26
	tipo_reg : ESTRUCT INICIO declara FIN .  (5)

	.  reduce 5


state 27
	func : DEF tipo ID . PARI argum PARD INICIO declara sentencs FIN func  (16)

	PARI  shift 32
	.  error


state 28
	declara : tipo list_var PYC declara .  (2)

	.  reduce 2


state 29
	list_var : list_var COMA ID .  (14)

	.  reduce 14


state 30
	declara : tipo_reg list_var PYC declara .  (3)

	.  reduce 3


state 31
	tipo_arr : CORI NUM CORD . tipo_arr  (12)
	tipo_arr : .  (13)

	CORI  shift 18
	ID  reduce 13

	tipo_arr  goto 33


state 32
	func : DEF tipo ID PARI . argum PARD INICIO declara sentencs FIN func  (16)

	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 34
	.  error

	base  goto 35
	argum  goto 36
	list_arg  goto 37
	arg  goto 38
	tipo_arg  goto 39


state 33
	tipo_arr : CORI NUM CORD tipo_arr .  (12)

	.  reduce 12


state 34
	base : SIN .  (11)
	argum : SIN .  (19)

	PARD  reduce 19
	CORI  reduce 11
	ID  reduce 11


state 35
	tipo_arg : base . param_arr  (23)
	param_arr : .  (25)

	CORI  shift 40
	ID  reduce 25

	param_arr  goto 41


state 36
	func : DEF tipo ID PARI argum . PARD INICIO declara sentencs FIN func  (16)

	PARD  shift 42
	.  error


state 37
	argum : list_arg .  (18)
	list_arg : list_arg . COMA arg  (20)

	COMA  shift 43
	PARD  reduce 18


state 38
	list_arg : arg .  (21)

	.  reduce 21


state 39
	arg : tipo_arg . ID  (22)

	ID  shift 44
	.  error


state 40
	param_arr : CORI . CORD param_arr  (24)

	CORD  shift 45
	.  error


state 41
	tipo_arg : base param_arr .  (23)

	.  reduce 23


state 42
	func : DEF tipo ID PARI argum PARD . INICIO declara sentencs FIN func  (16)

	INICIO  shift 46
	.  error


state 43
	list_arg : list_arg COMA . arg  (20)

	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	.  error

	base  goto 35
	arg  goto 47
	tipo_arg  goto 39


state 44
	arg : tipo_arg ID .  (22)

	.  reduce 22


state 45
	param_arr : CORI CORD . param_arr  (24)
	param_arr : .  (25)

	CORI  shift 40
	ID  reduce 25

	param_arr  goto 48


state 46
	func : DEF tipo ID PARI argum PARD INICIO . declara sentencs FIN func  (16)
	declara : .  (4)

	ESTRUCT  shift 1
	INT  shift 2
	FLOAT  shift 3
	DOUBLE  shift 4
	CAR  shift 5
	SIN  shift 6
	INICIO  reduce 4
	SI  reduce 4
	MIENT  reduce 4
	HACER  reduce 4
	SEGUN  reduce 4
	ESCRIBE  reduce 4
	LEER  reduce 4
	DEVOL  reduce 4
	TERMI  reduce 4
	ID  reduce 4

	declara  goto 49
	tipo  goto 9
	tipo_reg  goto 10
	base  goto 11


state 47
	list_arg : list_arg COMA arg .  (20)

	.  reduce 20


state 48
	param_arr : CORI CORD param_arr .  (24)

	.  reduce 24


state 49
	func : DEF tipo ID PARI argum PARD INICIO declara . sentencs FIN func  (16)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentencs  goto 60
	sentenc  goto 61
	var  goto 62


state 50
	sentenc : INICIO . sentenc FIN  (39)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 63
	var  goto 62


state 51
	sentenc : SI . e_bool ENTC sentenc FIN  (28)
	sentenc : SI . e_bool ENTC sentenc SINO sentenc FIN  (29)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 71
	var  goto 72
	expr  goto 73
	relac  goto 74


state 52
	sentenc : MIENT . e_bool HACER sentenc FIN  (30)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 75
	var  goto 72
	expr  goto 73
	relac  goto 74


state 53
	sentenc : HACER . sentenc MIENT e_bool PYC  (31)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 76
	var  goto 62


state 54
	sentenc : SEGUN . PARI var PARD HACER casos predet FIN  (32)

	PARI  shift 77
	.  error


state 55
	sentenc : ESCRIBE . expr PYC  (34)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 78


state 56
	sentenc : LEER . var PYC  (35)

	ID  shift 59
	.  error

	var  goto 79


state 57
	sentenc : DEVOL . PYC  (36)
	sentenc : DEVOL . expr PYC  (37)

	PYC  shift 80
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 81


state 58
	sentenc : TERMI . PYC  (38)

	PYC  shift 82
	.  error


state 59
	var : ID . var_comp  (67)
	dato_est_sim : .  (72)

	PARI  shift 83
	CORI  shift 84
	PYC  reduce 72
	COMA  reduce 72
	DPI  reduce 72
	PT  reduce 72
	ENTC  reduce 72
	HACER  reduce 72
	MAS  reduce 72
	MNS  reduce 72
	OR  reduce 72
	MUL  reduce 72
	DIV  reduce 72
	PRC  reduce 72
	AND  reduce 72
	MAY  reduce 72
	MAYI  reduce 72
	MEN  reduce 72
	MENI  reduce 72
	DIF  reduce 72
	IGUAL  reduce 72
	PARD  reduce 72
	CORD  reduce 72

	var_comp  goto 85
	dato_est_sim  goto 86
	arreglo  goto 87


state 60
	func : DEF tipo ID PARI argum PARD INICIO declara sentencs . FIN func  (16)
	sentencs : sentencs . sentenc  (26)

	INICIO  shift 50
	FIN  shift 88
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 89
	var  goto 62


state 61
	sentencs : sentenc .  (27)

	.  reduce 27


state 62
	sentenc : var . DPI expr PYC  (33)

	DPI  shift 90
	.  error


state 63
	sentenc : INICIO sentenc . FIN  (39)

	FIN  shift 91
	.  error


state 64
	e_bool : VERDAD .  (48)

	.  reduce 48


state 65
	e_bool : FALSO .  (49)

	.  reduce 49


state 66
	e_bool : NOT . e_bool  (46)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 92
	var  goto 72
	expr  goto 73
	relac  goto 74


state 67
	expr : PARI . expr PARD  (57)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 93


state 68
	expr : NUM .  (64)

	.  reduce 64


state 69
	expr : CARACT .  (66)

	.  reduce 66


state 70
	expr : CAD .  (65)

	.  reduce 65


state 71
	sentenc : SI e_bool . ENTC sentenc FIN  (28)
	sentenc : SI e_bool . ENTC sentenc SINO sentenc FIN  (29)
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool . AND e_bool  (45)

	ENTC  shift 94
	OR  shift 95
	AND  shift 96
	.  error


state 72
	expr : var .  (63)

	.  reduce 63


state 73
	relac : expr .  (56)
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	PYC  reduce 56
	ENTC  reduce 56
	HACER  reduce 56
	OR  reduce 56
	AND  reduce 56
	MAY  reduce 56
	MAYI  reduce 56
	MEN  reduce 56
	MENI  reduce 56
	DIF  reduce 56
	IGUAL  reduce 56


state 74
	e_bool : relac .  (47)
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)

	MAY  shift 102
	MAYI  shift 103
	MEN  shift 104
	MENI  shift 105
	DIF  shift 106
	IGUAL  shift 107
	PYC  reduce 47
	ENTC  reduce 47
	HACER  reduce 47
	OR  reduce 47
	AND  reduce 47


state 75
	sentenc : MIENT e_bool . HACER sentenc FIN  (30)
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool . AND e_bool  (45)

	HACER  shift 108
	OR  shift 95
	AND  shift 96
	.  error


state 76
	sentenc : HACER sentenc . MIENT e_bool PYC  (31)

	MIENT  shift 109
	.  error


state 77
	sentenc : SEGUN PARI . var PARD HACER casos predet FIN  (32)

	ID  shift 59
	.  error

	var  goto 110


state 78
	sentenc : ESCRIBE expr . PYC  (34)
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	PYC  shift 111
	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	.  error


state 79
	sentenc : LEER var . PYC  (35)

	PYC  shift 112
	.  error


state 80
	sentenc : DEVOL PYC .  (36)

	.  reduce 36


state 81
	sentenc : DEVOL expr . PYC  (37)
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	PYC  shift 113
	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	.  error


state 82
	sentenc : TERMI PYC .  (38)

	.  reduce 38


state 83
	var_comp : PARI . param PARD  (70)
	param : .  (76)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	PARD  reduce 76

	var  goto 72
	expr  goto 114
	param  goto 115
	list_param  goto 116


state 84
	arreglo : CORI . expr CORD  (74)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 117


state 85
	var : ID var_comp .  (67)

	.  reduce 67


state 86
	var_comp : dato_est_sim .  (68)
	dato_est_sim : dato_est_sim . PT ID  (71)

	PT  shift 118
	PYC  reduce 68
	COMA  reduce 68
	DPI  reduce 68
	ENTC  reduce 68
	HACER  reduce 68
	MAS  reduce 68
	MNS  reduce 68
	OR  reduce 68
	MUL  reduce 68
	DIV  reduce 68
	PRC  reduce 68
	AND  reduce 68
	MAY  reduce 68
	MAYI  reduce 68
	MEN  reduce 68
	MENI  reduce 68
	DIF  reduce 68
	IGUAL  reduce 68
	PARD  reduce 68
	CORD  reduce 68


state 87
	var_comp : arreglo .  (69)
	arreglo : arreglo . CORI expr CORD  (73)

	CORI  shift 119
	PYC  reduce 69
	COMA  reduce 69
	DPI  reduce 69
	ENTC  reduce 69
	HACER  reduce 69
	MAS  reduce 69
	MNS  reduce 69
	OR  reduce 69
	MUL  reduce 69
	DIV  reduce 69
	PRC  reduce 69
	AND  reduce 69
	MAY  reduce 69
	MAYI  reduce 69
	MEN  reduce 69
	MENI  reduce 69
	DIF  reduce 69
	IGUAL  reduce 69
	PARD  reduce 69
	CORD  reduce 69


state 88
	func : DEF tipo ID PARI argum PARD INICIO declara sentencs FIN . func  (16)
	func : .  (17)

	DEF  shift 13
	$end  reduce 17

	func  goto 120


state 89
	sentencs : sentencs sentenc .  (26)

	.  reduce 26


state 90
	sentenc : var DPI . expr PYC  (33)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 121


state 91
	sentenc : INICIO sentenc FIN .  (39)

	.  reduce 39


state 92
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool . AND e_bool  (45)
	e_bool : NOT e_bool .  (46)

	.  reduce 46


state 93
	expr : PARI expr . PARD  (57)
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	PARD  shift 122
	.  error


state 94
	sentenc : SI e_bool ENTC . sentenc FIN  (28)
	sentenc : SI e_bool ENTC . sentenc SINO sentenc FIN  (29)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 123
	var  goto 62


state 95
	e_bool : e_bool OR . e_bool  (44)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 124
	var  goto 72
	expr  goto 73
	relac  goto 74


state 96
	e_bool : e_bool AND . e_bool  (45)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 125
	var  goto 72
	expr  goto 73
	relac  goto 74


state 97
	expr : expr MAS . expr  (61)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 126


state 98
	expr : expr MNS . expr  (62)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 127


state 99
	expr : expr MUL . expr  (58)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 128


state 100
	expr : expr DIV . expr  (59)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 129


state 101
	expr : expr PRC . expr  (60)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 130


state 102
	relac : relac MAY . relac  (50)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 131


state 103
	relac : relac MAYI . relac  (52)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 132


state 104
	relac : relac MEN . relac  (51)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 133


state 105
	relac : relac MENI . relac  (53)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 134


state 106
	relac : relac DIF . relac  (54)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 135


state 107
	relac : relac IGUAL . relac  (55)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 73
	relac  goto 136


state 108
	sentenc : MIENT e_bool HACER . sentenc FIN  (30)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 137
	var  goto 62


state 109
	sentenc : HACER sentenc MIENT . e_bool PYC  (31)

	VERDAD  shift 64
	FALSO  shift 65
	NOT  shift 66
	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	e_bool  goto 138
	var  goto 72
	expr  goto 73
	relac  goto 74


state 110
	sentenc : SEGUN PARI var . PARD HACER casos predet FIN  (32)

	PARD  shift 139
	.  error


state 111
	sentenc : ESCRIBE expr PYC .  (34)

	.  reduce 34


state 112
	sentenc : LEER var PYC .  (35)

	.  reduce 35


state 113
	sentenc : DEVOL expr PYC .  (37)

	.  reduce 37


state 114
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)
	list_param : expr .  (78)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	COMA  reduce 78
	PARD  reduce 78


state 115
	var_comp : PARI param . PARD  (70)

	PARD  shift 140
	.  error


state 116
	param : list_param .  (75)
	list_param : list_param . COMA expr  (77)

	COMA  shift 141
	PARD  reduce 75


state 117
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)
	arreglo : CORI expr . CORD  (74)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	CORD  shift 142
	.  error


state 118
	dato_est_sim : dato_est_sim PT . ID  (71)

	ID  shift 143
	.  error


state 119
	arreglo : arreglo CORI . expr CORD  (73)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 144


state 120
	func : DEF tipo ID PARI argum PARD INICIO declara sentencs FIN func .  (16)

	.  reduce 16


state 121
	sentenc : var DPI expr . PYC  (33)
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	PYC  shift 145
	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	.  error


state 122
	expr : PARI expr PARD .  (57)

	.  reduce 57


state 123
	sentenc : SI e_bool ENTC sentenc . FIN  (28)
	sentenc : SI e_bool ENTC sentenc . SINO sentenc FIN  (29)

	FIN  shift 146
	SINO  shift 147
	.  error


state 124
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool OR e_bool .  (44)
	e_bool : e_bool . AND e_bool  (45)

	AND  shift 96
	PYC  reduce 44
	ENTC  reduce 44
	HACER  reduce 44
	OR  reduce 44


state 125
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool . AND e_bool  (45)
	e_bool : e_bool AND e_bool .  (45)

	.  reduce 45


state 126
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr MAS expr .  (61)
	expr : expr . MNS expr  (62)

	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	PYC  reduce 61
	COMA  reduce 61
	ENTC  reduce 61
	HACER  reduce 61
	MAS  reduce 61
	MNS  reduce 61
	OR  reduce 61
	AND  reduce 61
	MAY  reduce 61
	MAYI  reduce 61
	MEN  reduce 61
	MENI  reduce 61
	DIF  reduce 61
	IGUAL  reduce 61
	PARD  reduce 61
	CORD  reduce 61


state 127
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)
	expr : expr MNS expr .  (62)

	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	PYC  reduce 62
	COMA  reduce 62
	ENTC  reduce 62
	HACER  reduce 62
	MAS  reduce 62
	MNS  reduce 62
	OR  reduce 62
	AND  reduce 62
	MAY  reduce 62
	MAYI  reduce 62
	MEN  reduce 62
	MENI  reduce 62
	DIF  reduce 62
	IGUAL  reduce 62
	PARD  reduce 62
	CORD  reduce 62


state 128
	expr : expr . MUL expr  (58)
	expr : expr MUL expr .  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	.  reduce 58


state 129
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr DIV expr .  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	.  reduce 59


state 130
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr PRC expr .  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)

	.  reduce 60


state 131
	relac : relac . MAY relac  (50)
	relac : relac MAY relac .  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)

	.  reduce 50


state 132
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac MAYI relac .  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)

	.  reduce 52


state 133
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac MEN relac .  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)

	.  reduce 51


state 134
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac MENI relac .  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)

	.  reduce 53


state 135
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac DIF relac .  (54)
	relac : relac . IGUAL relac  (55)

	.  reduce 54


state 136
	relac : relac . MAY relac  (50)
	relac : relac . MEN relac  (51)
	relac : relac . MAYI relac  (52)
	relac : relac . MENI relac  (53)
	relac : relac . DIF relac  (54)
	relac : relac . IGUAL relac  (55)
	relac : relac IGUAL relac .  (55)

	.  reduce 55


state 137
	sentenc : MIENT e_bool HACER sentenc . FIN  (30)

	FIN  shift 148
	.  error


state 138
	sentenc : HACER sentenc MIENT e_bool . PYC  (31)
	e_bool : e_bool . OR e_bool  (44)
	e_bool : e_bool . AND e_bool  (45)

	PYC  shift 149
	OR  shift 95
	AND  shift 96
	.  error


state 139
	sentenc : SEGUN PARI var PARD . HACER casos predet FIN  (32)

	HACER  shift 150
	.  error


state 140
	var_comp : PARI param PARD .  (70)

	.  reduce 70


state 141
	list_param : list_param COMA . expr  (77)

	PARI  shift 67
	ID  shift 59
	NUM  shift 68
	CARACT  shift 69
	CAD  shift 70
	.  error

	var  goto 72
	expr  goto 151


state 142
	arreglo : CORI expr CORD .  (74)

	.  reduce 74


state 143
	dato_est_sim : dato_est_sim PT ID .  (71)

	.  reduce 71


state 144
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)
	arreglo : arreglo CORI expr . CORD  (73)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	CORD  shift 152
	.  error


state 145
	sentenc : var DPI expr PYC .  (33)

	.  reduce 33


state 146
	sentenc : SI e_bool ENTC sentenc FIN .  (28)

	.  reduce 28


state 147
	sentenc : SI e_bool ENTC sentenc SINO . sentenc FIN  (29)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 153
	var  goto 62


state 148
	sentenc : MIENT e_bool HACER sentenc FIN .  (30)

	.  reduce 30


state 149
	sentenc : HACER sentenc MIENT e_bool PYC .  (31)

	.  reduce 31


state 150
	sentenc : SEGUN PARI var PARD HACER . casos predet FIN  (32)

	CASO  shift 154
	.  error

	casos  goto 155


state 151
	expr : expr . MUL expr  (58)
	expr : expr . DIV expr  (59)
	expr : expr . PRC expr  (60)
	expr : expr . MAS expr  (61)
	expr : expr . MNS expr  (62)
	list_param : list_param COMA expr .  (77)

	MAS  shift 97
	MNS  shift 98
	MUL  shift 99
	DIV  shift 100
	PRC  shift 101
	COMA  reduce 77
	PARD  reduce 77


state 152
	arreglo : arreglo CORI expr CORD .  (73)

	.  reduce 73


state 153
	sentenc : SI e_bool ENTC sentenc SINO sentenc . FIN  (29)

	FIN  shift 156
	.  error


state 154
	casos : CASO . NUM DP sentenc casos  (40)
	casos : CASO . NUM DP sentenc  (41)

	NUM  shift 157
	.  error


state 155
	sentenc : SEGUN PARI var PARD HACER casos . predet FIN  (32)
	predet : .  (43)

	PRED  shift 158
	FIN  reduce 43

	predet  goto 159


state 156
	sentenc : SI e_bool ENTC sentenc SINO sentenc FIN .  (29)

	.  reduce 29


state 157
	casos : CASO NUM . DP sentenc casos  (40)
	casos : CASO NUM . DP sentenc  (41)

	DP  shift 160
	.  error


state 158
	predet : PRED . DP sentenc  (42)

	DP  shift 161
	.  error


state 159
	sentenc : SEGUN PARI var PARD HACER casos predet . FIN  (32)

	FIN  shift 162
	.  error


state 160
	casos : CASO NUM DP . sentenc casos  (40)
	casos : CASO NUM DP . sentenc  (41)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 163
	var  goto 62


state 161
	predet : PRED DP . sentenc  (42)

	INICIO  shift 50
	SI  shift 51
	MIENT  shift 52
	HACER  shift 53
	SEGUN  shift 54
	ESCRIBE  shift 55
	LEER  shift 56
	DEVOL  shift 57
	TERMI  shift 58
	ID  shift 59
	.  error

	sentenc  goto 164
	var  goto 62


state 162
	sentenc : SEGUN PARI var PARD HACER casos predet FIN .  (32)

	.  reduce 32


state 163
	casos : CASO NUM DP sentenc . casos  (40)
	casos : CASO NUM DP sentenc .  (41)

	CASO  shift 154
	FIN  reduce 41
	PRED  reduce 41

	casos  goto 165


state 164
	predet : PRED DP sentenc .  (42)

	.  reduce 42


state 165
	casos : CASO NUM DP sentenc casos .  (40)

	.  reduce 40


52 terminals, 27 nonterminals
79 grammar rules, 166 states
